import pytest
from src.module_5 import m_5_6_1, m_5_6_2, m_5_6_3, m_5_6_4


# === Тест для задачи 5.6.1 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        (
            "galaxy123",
            "Старый кортеж: ('qwerty', '123456', 'abc123')\n"
            "Новый кортеж: ('qwerty', '123456', 'abc123', 'galaxy123')",
        ),
        (
            "alpha",
            "Старый кортеж: ('qwerty', '123456', 'abc123')\n"
            "Новый кортеж: ('qwerty', '123456', 'abc123', 'alpha')",
        ),
        (
            "galaxy",
            "Старый кортеж: ('qwerty', '123456', 'abc123')\n"
            "Новый кортеж: ('qwerty', '123456', 'abc123', 'galaxy')",
        ),
    ],
)
def test_5_6_1(data, expected):
    assert m_5_6_1(data) == expected


# === Тест для задачи 5.6.2 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        (
            "началась!",
            "Исходное сообщение: ('Агент', 'Джей,', 'твоя', 'следующая', 'миссия')\n"
            "Полное сообщение: Агент Джей, твоя следующая миссия началась!",
        ),
        (
            "готова!",
            "Исходное сообщение: ('Агент', 'Джей,', 'твоя', 'следующая', 'миссия')\n"
            "Полное сообщение: Агент Джей, твоя следующая миссия готова!",
        ),
        (
            "",
            "Исходное сообщение: ('Агент', 'Джей,', 'твоя', 'следующая', 'миссия')\n"
            "Полное сообщение: Агент Джей, твоя следующая миссия",
        ),
        (
            "провалена.",
            "Исходное сообщение: ('Агент', 'Джей,', 'твоя', 'следующая', 'миссия')\n"
            "Полное сообщение: Агент Джей, твоя следующая миссия провалена.",
        ),
    ],
)
def test_5_6_2(data, expected):
    assert m_5_6_2(data) == expected


# === Тест для задачи 5.6.3 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        (
            "hello\nhi\n",
            "Старый кортеж паролей: ('virus', 'antivirus', 'zombie', 'virus', 'bio', 'zombie', 'bio', 'virus', 'biohazard', 'virus', 'biohazard')\n"
            "Новый кортеж паролей: ('hi', 'bio', 'virus', 'hello', 'zombie', 'antivirus', 'biohazard')",
        ),
        (
            "mutant\nvirus\n",
            "Старый кортеж паролей: ('virus', 'antivirus', 'zombie', 'virus', 'bio', 'zombie', 'bio', 'virus', 'biohazard', 'virus', 'biohazard')\n"
            "Новый кортеж паролей: ('bio', 'virus', 'zombie', 'mutant', 'antivirus', 'biohazard')",
        ),
        (
            "Tvirus\nantivirus\n",
            "Старый кортеж паролей: ('virus', 'antivirus', 'zombie', 'virus', 'bio', 'zombie', 'bio', 'virus', 'biohazard', 'virus', 'biohazard')\n"
            "Новый кортеж паролей: ('bio', 'virus', 'zombie', 'Tvirus', 'antivirus', 'biohazard')",
        ),
        (
            "cure\nantivirusX\n",
            "Старый кортеж паролей: ('virus', 'antivirus', 'zombie', 'virus', 'bio', 'zombie', 'bio', 'virus', 'biohazard', 'virus', 'biohazard')\n"
            "Новый кортеж паролей: ('bio', 'cure', 'virus', 'zombie', 'antivirus', 'biohazard', 'antivirusX')",
        ),
        (
            "antidote\ninfected\n",
            "Старый кортеж паролей: ('virus', 'antivirus', 'zombie', 'virus', 'bio', 'zombie', 'bio', 'virus', 'biohazard', 'virus', 'biohazard')\n"
            "Новый кортеж паролей: ('bio', 'virus', 'zombie', 'antidote', 'infected', 'antivirus', 'biohazard')",
        ),
    ],
)
def test_5_6_3(data, expected):
    assert m_5_6_3(data) == expected


# === Тест для задачи 5.6.4 ===
@pytest.mark.parametrize(
    "data, expected",
    [
        (
            "Гарри Поттер, 1984, Ведьмак",
            "Исходный кортеж книг: ('Мастер и Маргарита', 'Война и мир', '1984', "
            "'Преступление и наказание', '451 градус по Фаренгейту', '1984')\n"
            "Новый кортеж книг: ('1984', '451 градус по Фаренгейту', 'Ведьмак', "
            "'Война и мир', 'Гарри Поттер', 'Мастер и Маргарита', 'Преступление и наказание')",
        ),
        (
            "Хоббит, Властелин колец, Хатико",
            "Исходный кортеж книг: ('Мастер и Маргарита', 'Война и мир', '1984', "
            "'Преступление и наказание', '451 градус по Фаренгейту', '1984')\n"
            "Новый кортеж книг: ('1984', '451 градус по Фаренгейту', 'Властелин колец', "
            "'Война и мир', 'Мастер и Маргарита', 'Преступление и наказание', 'Хатико', 'Хоббит')",
        ),
        (
            "1, 101, ф, d",
            "Исходный кортеж книг: ('Мастер и Маргарита', 'Война и мир', '1984', "
            "'Преступление и наказание', '451 градус по Фаренгейту', '1984')\n"
            "Новый кортеж книг: ('1', '101', '1984', '451 градус по Фаренгейту', 'd', "
            "'Война и мир', 'Мастер и Маргарита', 'Преступление и наказание', 'ф')",
        ),
    ],
)
def test_5_6_4(data, expected):
    assert m_5_6_4(data) == expected
