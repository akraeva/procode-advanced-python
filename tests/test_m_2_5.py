import pytest
from src.module_2 import m_2_5_1, m_2_5_2, m_2_5_3, m_2_5_4, m_2_5_5, m_2_5_6, m_2_5_7


# === Тесты для задачи 2.5.1 ===


@pytest.mark.parametrize(
    "text, expected",
    [
        (
            "alpha, bravo, danger, charlie",
            "След обнаружен! Мы нашли сигнал тревоги: danger",
        ),
        (
            "alpha, bravo, charlie",
            "Сигнал тревоги не найден. Мы продолжаем поиски.",
        ),
        (
            "danger",
            "След обнаружен! Мы нашли сигнал тревоги: danger",
        ),
        (
            "",
            "Сигнал тревоги не найден. Мы продолжаем поиски.",
        ),
        (
            "danger, danger",
            "След обнаружен! Мы нашли сигнал тревоги: danger",
        ),
    ],
)
def test_m_2_5_1(text, expected):
    assert m_2_5_1(text) == expected


# === Тесты для задачи 2.5.2 ===


@pytest.mark.parametrize(
    "text, expected",
    [
        (
            "alpha, ignore, bravo, ignore, charlie",
            "ignore\nignore\n2",
        ),
        (
            "alpha, ignore, bravo, ignore, charlie, ignore",
            "ignore\nignore\nignore\n3",
        ),
        (
            "alpha, bravo, charlie",
            "0",
        ),
        (
            "ignore",
            "ignore\n1",
        ),
        (
            "iharIie",
            "0",
        ),
        (
            "ignore, ignore, ignore, ignore, ignore, ignore, ignore, ignore, ignore, ignore",
            "ignore\nignore\nignore\nignore\nignore\nignore\nignore\nignore\nignore\nignore\n10",
        ),
    ],
)
def test_m_2_5_2(text, expected):
    assert m_2_5_2(text) == expected


# === Тесты для задачи 2.5.3 ===


@pytest.mark.parametrize(
    "text, expected",
    [
        (
            "vampire werewolf vampire ghost werewolf",
            "ghost",
        ),
        (
            "vampire werewolf vampire ghost werewolf ghos",
            "ghost",
        ),
        (
            "vampire werewolf vampire ghost werewolf ghost",
            "Нет новых монстров",
        ),
        (
            "vamp got pok loki",
            "vamp",
        ),
    ],
)
def test_m_2_5_3(text, expected):
    assert m_2_5_3(text) == expected


# === Тесты для задачи 2.5.4 ===


@pytest.mark.parametrize(
    "text, expected",
    [
        ("шум Гррррр шум Аууууу", "Монстр пойман! Это Демон!"),
        ("шум Шшшшшш шум Аууууу", "Монстр пойман! Это Вампир!"),
        ("шум Аууууу шум Аууууу", "Монстр пойман! Это Вурдалак!"),
        ("шум Рррррр шум Аууууу", "Монстр пойман! Это Оборотень!"),
        ("шум Уууууу шум Аууууу", "Монстр пойман! Это Призрак!"),
        ("шум", "Пока тихо, наблюдаем!"),
        ("пор дор мор кукареку", "Пока тихо, наблюдаем!"),
        ("Аууууу", "Монстр пойман! Это Вурдалак!"),
    ],
)
def test_m_2_5_4(text, expected):
    assert m_2_5_4(text) == expected


# === Тесты для задачи 2.5.5 ===


@pytest.mark.parametrize(
    "text, expected",
    [
        (
            "шум Шшшшшш",
            "Монстр пойман! Это Вампир! Битва начинается!\n"
            "Ход Дона: Вампир получает 2 урона! У Вампир осталось 8 жизней.\n"
            "Ход Сима: Вампир получает 2 урона! У Вампир осталось 6 жизней.\n"
            "Ход Дона: Вампир получает 2 урона! У Вампир осталось 4 жизней.\n"
            "Ход Сима: Вампир получает 2 урона! У Вампир осталось 2 жизней.\n"
            "Ход Дона: Вампир получает 2 урона! У Вампир осталось 0 жизней.\n"
            "Вампир убит!",
        ),
        (
            "шум Аууууу",
            "Монстр пойман! Это Вурдалак! Битва начинается!\n"
            "Ход Дона: Вурдалак получает 2 урона! У Вурдалак осталось 11 жизней.\n"
            "Ход Сима: Вурдалак получает 2 урона! У Вурдалак осталось 9 жизней.\n"
            "Ход Дона: Вурдалак получает 2 урона! У Вурдалак осталось 7 жизней.\n"
            "Ход Сима: Вурдалак получает 2 урона! У Вурдалак осталось 5 жизней.\n"
            "Ход Дона: Вурдалак получает 2 урона! У Вурдалак осталось 3 жизней.\n"
            "Ход Сима: Вурдалак получает 2 урона! У Вурдалак осталось 1 жизней.\n"
            "Ход Дона: Вурдалак получает 2 урона! У Вурдалак осталось 0 жизней.\n"
            "Вурдалак убит!",
        ),
        (
            "шум Рррррр",
            "Монстр пойман! Это Оборотень! Битва начинается!\n"
            "Ход Дона: Оборотень получает 2 урона! У Оборотень осталось 6 жизней.\n"
            "Ход Сима: Оборотень получает 2 урона! У Оборотень осталось 4 жизней.\n"
            "Ход Дона: Оборотень получает 2 урона! У Оборотень осталось 2 жизней.\n"
            "Ход Сима: Оборотень получает 2 урона! У Оборотень осталось 0 жизней.\n"
            "Оборотень убит!",
        ),
        (
            "шум Уууууу",
            "Монстр пойман! Это Призрак! Битва начинается!\n"
            "Ход Дона: Призрак получает 2 урона! У Призрак осталось 12 жизней.\n"
            "Ход Сима: Призрак получает 2 урона! У Призрак осталось 10 жизней.\n"
            "Ход Дона: Призрак получает 2 урона! У Призрак осталось 8 жизней.\n"
            "Ход Сима: Призрак получает 2 урона! У Призрак осталось 6 жизней.\n"
            "Ход Дона: Призрак получает 2 урона! У Призрак осталось 4 жизней.\n"
            "Ход Сима: Призрак получает 2 урона! У Призрак осталось 2 жизней.\n"
            "Ход Дона: Призрак получает 2 урона! У Призрак осталось 0 жизней.\n"
            "Призрак убит!",
        ),
        (
            "шум Гррррр",
            "Монстр пойман! Это Демон! Битва начинается!\n"
            "Ход Дона: Демон получает 2 урона! У Демон осталось 19 жизней.\n"
            "Ход Сима: Демон получает 2 урона! У Демон осталось 17 жизней.\n"
            "Ход Дона: Демон получает 2 урона! У Демон осталось 15 жизней.\n"
            "Ход Сима: Демон получает 2 урона! У Демон осталось 13 жизней.\n"
            "Ход Дона: Демон получает 2 урона! У Демон осталось 11 жизней.\n"
            "Ход Сима: Демон получает 2 урона! У Демон осталось 9 жизней.\n"
            "Ход Дона: Демон получает 2 урона! У Демон осталось 7 жизней.\n"
            "Ход Сима: Демон получает 2 урона! У Демон осталось 5 жизней.\n"
            "Ход Дона: Демон получает 2 урона! У Демон осталось 3 жизней.\n"
            "Ход Сима: Демон получает 2 урона! У Демон осталось 1 жизней.\n"
            "Ход Дона: Демон получает 2 урона! У Демон осталось 0 жизней.\n"
            "Демон убит!",
        ),
    ],
)
def test_m_2_5_5(text, expected):
    assert m_2_5_5(text) == expected


# === Тесты для задачи 2.5.6 ===


@pytest.mark.parametrize(
    "commands, expected",
    [
        (
            [
                "простая атака",
                "атака",
                "ускоренная атака",
                "защита",
                "простая атака",
                "атака",
                "ускоренная атака",
                "атака",
            ],
            "Жизни Мага: 15\n"
            "Жизни братьев: 16\n"
            "Жизни Мага: 10\n"
            "Жизни братьев: 12\n"
            "Жизни Мага: 5\n"
            "Жизни братьев: 8\n"
            "Жизни Мага: -2\n"
            "Жизни братьев: 2\n"
            "Знаешь, что хуже магии? Братья Маузеры с оружием в руках.",
        ),
        (
            [
                "ускоренная атака",
                "защита",
                "ускоренная атака",
                "атака",
                "ускоренная атака",
                "атака",
                "ускоренная атака",
                "защита",
            ],
            "Жизни Мага: 15\n"
            "Жизни братьев: 16\n"
            "Жизни Мага: 8\n"
            "Жизни братьев: 10\n"
            "Жизни Мага: 6\n"
            "Жизни братьев: 4\n"
            "Жизни Мага: 6\n"
            "Жизни братьев: 0\n"
            "Магия победила, и ваши души теперь мои!",
        ),
        (
            [
                "простая атака",
                "защита",
                "простая атака",
                "защита",
                "простая атака",
                "защита",
                "простая атака",
                "защита",
                "простая атака",
                "защита",
                "простая атака",
                "атака",
            ],
            "Жизни Мага: 17\n"
            "Жизни братьев: 18\n"
            "Жизни Мага: 14\n"
            "Жизни братьев: 16\n"
            "Жизни Мага: 11\n"
            "Жизни братьев: 14\n"
            "Жизни Мага: 8\n"
            "Жизни братьев: 12\n"
            "Жизни Мага: 5\n"
            "Жизни братьев: 10\n"
            "Жизни Мага: 0\n"
            "Жизни братьев: 6\n"
            "Знаешь, что хуже магии? Братья Маузеры с оружием в руках.",
        ),
    ],
)
def test_m_2_5_6(commands, expected):
    assert m_2_5_6(commands) == expected


# === Тесты для задачи 2.5.7 ===


@pytest.mark.parametrize(
    "lines, expected",
    [
        (
            [
                "4\n",
                "Алиса: серебро, свет\n",
                "Ксавье: серебро, огонь\n",
                "Сигизмунд: свет, серебро\n",
                "Люк: серебро, туман\n",
                "серебро, свет\n",
            ],
            "Вампир Алиса уязвим для оружия!\n"
            "Вампир Ксавье уязвим для оружия!\n"
            "Вампир Сигизмунд уязвим для оружия!\n"
            "Вампир Люк уязвим для оружия!",
        ),
        (
            [
                "2\n",
                "Марио: серебро, огонь\n",
                "Лили: свет, серебро\n",
                "свет\n",
            ],
            "Вампир Марио не уязвим для оружия!\n" "Вампир Лили уязвим для оружия!",
        ),
        (
            [
                "3\n",
                "Тёмный Вальдемар: свет, серебро\n",
                "Вероника: серебро, огонь\n",
                "Константин: свет, серебро\n",
                "огонь\n",
            ],
            "Вампир Тёмный Вальдемар не уязвим для оружия!\n"
            "Вампир Вероника уязвим для оружия!\n"
            "Вампир Константин не уязвим для оружия!",
        ),
    ],
)
def test_m_2_5_7(lines, expected):
    assert m_2_5_7(lines) == expected
