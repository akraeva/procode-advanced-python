import pytest
from src.module_7 import (
    m_7_2_1,
    m_7_2_2,
    m_7_2_3,
    m_7_2_4,
)


# === Тест для задачи 7.2.1 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        ("Australian Dollar (AUD)", 1582.512635),
        ("Russian Ruble (RUB)", 86201.978414),
        ("Singapore Dollar (SGD)", 1521.157853),
    ],
)
def test_7_2_1(data, expected):
    assert m_7_2_1(data) == expected


# === Тест для задачи 7.2.2 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        ("Кастиель", "Уровень силы Кастиель: 95"),
        ("Наташа", "Такой охотник не найден в архиве."),
        ("Люцифер", "Уровень силы Люцифер: 100"),
        ("Коля", "Такой охотник не найден в архиве."),
        ("Габриэль", "Уровень силы Габриэль: 92"),
        ("Микаэль", "Уровень силы Микаэль: 98"),
        ("Дон", "Уровень силы Дон: 90"),
    ],
)
def test_7_2_2(data, expected):
    assert m_7_2_2(data) == expected


# === Тест для задачи 7.2.3 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        (
            '101: "Золотой ключ", 205: "Серебряный ключ", 303: "Бронзовый ключ"',
            "Сумма всех ключей: 609\nМинимальный ключ: 101\nМаксимальный ключ: 303",
        ),
        (
            '101: "Золотой ключ", 205: "Серебряный ключ", 303: "Бронзовый ключ", '
            '404: "Ключ иллюзий", 512: "Ключ времени", 666: "Демонский ключ", '
            '777: "Ключ небес", 888: "Ключ судьбы", 999: "Ключ хаоса", '
            '1001: "Ключ мудрости", 1102: "Ключ света", 1203: "Ключ теней", '
            '1304: "Ключ стихий", 1405: "Ключ духов", 1506: "Ключ пространства", '
            '1607: "Ключ измерений", 1708: "Ключ вечности", 1809: "Ключ знания", '
            '1910: "Ключ силы", 2000: "Ключ гармонии"',
            "Сумма всех ключей: 21410\nМинимальный ключ: 101\nМаксимальный ключ: 2000",
        ),
        (
            '303: "Золотой ключ", 101: "Бронзовый ключ", 999: "Ключ времени", '
            '777: "Ключ небес", 512: "Ключ хаоса"',
            "Сумма всех ключей: 2692\nМинимальный ключ: 101\nМаксимальный ключ: 999",
        ),
    ],
)
def test_7_2_3(data, expected):
    assert m_7_2_3(data) == expected


# === Тест для задачи 7.2.4 ===


@pytest.mark.parametrize(
    "data, expected",
    [
        (
            "Огненный шар: 50, Ледяная стрела: 40, Щит молнии: 70\n"
            "Ледяная стрела: 40, Огненный шар: 50, Щит молнии: 70",
            "Книги идентичны",
        ),
        (
            "Огненный шар: 50, Ледяная стрела: 40, Щит молнии: 70\n"
            "Огненный шар: 50, Ледяная стрела: 45, Щит молнии: 70",
            "Книги отличаются",
        ),
        (
            "Огненный шар: 50, Ледяная стрела: 40, Щит молнии: 70\n"
            "Огненный шар: 50, Щит молнии: 70",
            "Книги отличаются",
        ),
        (
            "Огненный шар: 50, Ледяная стрела: 40, Щит молнии: 70, Магический щит: 60, Призрачный клинок: 85\n"
            "Ледяная стрела: 40, Огненный шар: 50, Призрачный клинок: 85, Магический щит: 60, Щит молнии: 70",
            "Книги идентичны",
        ),
        (
            "Огненный шар: 50, Ледяная стрела: 40, Щит молнии: 70\n"
            "Тёмная магия: 90, Ледяной щит: 35, Огненный взрыв: 60",
            "Книги отличаются",
        ),
    ],
)
def test_7_2_4(data, expected):
    assert m_7_2_4(data) == expected
