# Stepick.org — PROкод: продвинутый курс по Python
# 5. Работа с кортежами (tuple)

from sys import stdin


# pylint: disable=W0105

# 5.1 Что такое кортежи и их отличие от списков

# === Задача 1. Список друзей ===
"""
    Считай три строки по порядку:
        имя друга --> строка;
        возраст --> целое число;
        город --> строка.
    Создай кортеж вида (имя, возраст, город) и выведи строку:
        Информация о друге: (<кортеж>)
    """

# from sys import stdin


def m_5_1_1(data: str):
    result = tuple(
        int(word.strip()) if word.isdigit() else word.strip() for word in data.split()
    )
    return f"Информация о друге: {result}"


# print(m_5_1_1(stdin.read()))


# === Задача 2. Путёвка в мир приключений ===
"""
    Считай две строки:
        - вещи из одежды, перечисленные через пробел;
        - вещи из оборудования, перечисленные через пробел.
    Преобразуй каждую строку в кортеж строк. Объедини два кортежа
    в один и затем удвой его (повторив порядок вещей дважды).
    Выведи результат в формате:
        Список вещей на экспедицию: (<кортеж>)
    """

# from sys import stdin


def m_5_1_2(data: str):
    clothes, equipment = (
        tuple(element for element in line.split()) for line in data.strip().split("\n")
    )

    return f"Список вещей на экспедицию: {(clothes + equipment) * 2}"


# print(m_5_1_2(stdin.read()))

# === Задача 3. САнализ оценок студентов ===
"""
    Считай:
        - целое число N --> количество студентов;
        - затем N целых чисел --> оценки.
    Сформируй кортеж всех оценок. Вычисли среднее значение и выведи его
    с двумя знаками после запятой. Сформируй новый кортеж из оценок,
    которые равны среднему или выше, сохранив порядок появления.
    Выведи три строки:
        - исходный кортеж оценок;
        - среднее значение (с двумя знаками после запятой);
        - кортеж оценок, равных или выше среднего.
    """

# from sys import stdin


def m_5_1_3(data: str):
    grades = tuple(map(int, data[1:].strip().split("\n")))
    average = sum(grades) / len(grades)
    above_average = tuple(grade for grade in grades if grade >= average)
    return f"{grades}\n{average:.2f}\n{above_average}"


# print(m_5_1_3(stdin.read()))


# === Задача 4.Нахождение наиболее удалённого объекта ===
"""
    Считайте:
        - целое число N --> количество объектов;
        - затем для каждого объекта по две строки:
        x и y (вещественные числа).
    Для каждого объекта сформируйте кортеж (x, y). Найдите объект
    с максимальным расстоянием до начала координат, где расстояние
    рассчитывается по формуле длины вектора.
    Выведите две строки:
        - кортеж координат наиболее удалённого объекта
          (как в стандартном представлении Python, с числами типа float);
        - расстояние до этого объекта, округлённое до 2 знаков после запятой.
    """

# from sys import stdin


def m_5_1_4(data: str):
    arr = tuple(map(float, data.strip().split("\n")))
    objects = zip(arr[1::2], arr[2::2])
    most_distant = max(objects, key=lambda c: (c[0] ** 2 + c[1] ** 2) ** 0.5)
    distant = (most_distant[0] ** 2 + most_distant[1] ** 2) ** 0.5
    return f"{most_distant}\n{distant:.2f}"


# print(m_5_1_4(stdin.read()))

# === Задача 5. Определение самого яркого цвета ===
"""
    Считай:
        - целое число N --> количество цветов;
        - затем для каждого цвета три целых числа: R, G, B (каждое с новой строки).
    Для каждого цвета
        - сформируй кортеж (R, G, B),
        - вычисли его яркость как R + G + B
        - найди цвет с максимальной яркостью.
    Выведи две строки:
        - кортеж самого яркого цвета;
        - его яркость (сумму R + G + B).
    """

# from sys import stdin


def m_5_1_5(data: str):
    arr = tuple(map(int, data.strip().split("\n")))
    rgb = zip(arr[1::3], arr[2::3], arr[3::3])
    brightnes = max(rgb, key=lambda c: sum(c))
    return f"{brightnes}\n{sum(brightnes)}"


# print(m_5_1_5(stdin.read()))

# === Задача 6. Циклический сдвиг кортежа инструкций ===
"""
    Считайте:
        - целое число N --> количество инструкций;
        - затем N целых чисел (каждое с новой строки)
          --> идентификаторы команд.
    Сформируйте кортеж из введённых чисел.
    Выполните циклический сдвиг вправо на 1:
    последний элемент становится первым, остальные сдвигаются вправо.
    Выведите две строки строго в таком виде:
        - Исходный кортеж: <кортеж>
        - Кортеж после сдвига: <кортеж>
    Если кортеж состоит из одного элемента, после сдвига он не меняется.
    """

# from sys import stdin


def m_5_1_6(data: str):
    commands = tuple(map(int, data[1:].strip().split("\n")))
    if len(commands) < 2:
        return f"Исходный кортеж: {commands}\nКортеж после сдвига: {commands}"
    shift = commands[-1:] + commands[:-1]
    return f"Исходный кортеж: {commands}\nКортеж после сдвига: {shift}"


# print(m_5_1_6(stdin.read()))
