# Stepick.org ‚Äî PRO–∫–æ–¥: –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫—É—Ä—Å –ø–æ Python
# 11. –†–∞–±–æ—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –≤ Python

from sys import stdin


# pylint: disable=W0105


# 11.1 –§—É–Ω–∫—Ü–∏–∏ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤


# === –ó–∞–¥–∞—á–∞ 1. –õ–µ–≥–µ–Ω–¥–∞  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é filter_magic_numbers, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ
           –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–ª–æ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã).
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–ª—å–∫–æ –∏–∑ —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è
           —Å—Ä–µ–¥–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
    –®–∞–≥ 3. –ü–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º —Å–ø–∏—Å–∫–µ –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
           –ø–æ—Ä—è–¥–∫—É –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
    –®–∞–≥ 4. –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ return.

    –ü—Ä–∏–º–µ—á–∞–Ω–∏—è.
    ‚Äî –ß—ë—Ç–Ω—ã–º–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è —á–∏—Å–ª–∞, –∫—Ä–∞—Ç–Ω—ã–µ 2 (–≤–∫–ª—é—á–∞—è 0 –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á—ë—Ç–Ω—ã–µ).
    ‚Äî –ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—é—Ç—Å—è —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞.
    """


def filter_magic_numbers(*args):
    result = [int(arg) for arg in args if arg % 2 == 0]
    return result


m_11_1_1 = filter_magic_numbers


# === –ó–∞–¥–∞—á–∞ 2. –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è: convert_to_latin  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é convert_to_latin(text: str, sep: str = " ") -> str.
    –®–∞–≥ 2. –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
    –®–∞–≥ 3. –ö–∞–∂–¥—É—é –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫—É—é –±—É–∫–≤—É –∑–∞–º–µ–Ω—è–π—Ç–µ –ø–æ —Å–ª–æ–≤–∞—Ä—é s –Ω–∏–∂–µ;
           - –ø—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω—è–π—Ç–µ –Ω–∞ sep;
           - –≤—Å–µ –ø—Ä–æ—á–∏–µ —Å–∏–º–≤–æ–ª—ã (–ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –∏ –¥—Ä.)
             –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
    –®–∞–≥ 4. –í–µ—Ä–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ return.
    –í–∞–∂–Ω–æ: —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å, input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    """


def convert_to_latin(text: str, sep: str = " ") -> str:
    # fmt: off
    s = {'–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '–∂': 'zh',
         '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm', '–Ω': 'n',
         '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f',
         '—Ö': 'h', '—Ü': 'c', '—á': 'ch', '—à': 'sh', '—â': 'shch', '—ã': 'y',
         '—ç': 'e', '—é': 'yu', '—è': 'ya', '—ë': 'yo'}
    # fmt: on
    s[" "] = sep
    converted_text = "".join(s[ch] if ch in s else ch for ch in text.lower())
    return converted_text


m_11_1_2 = convert_to_latin


# === –ó–∞–¥–∞—á–∞ 3. –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–±–∞—Ç—ã  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é def political_debate(*arguments, key_argument),
           –≥–¥–µ:
                - *arguments --> –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ã—á–Ω—ã—Ö –¥–æ–≤–æ–¥–æ–≤
                  (–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã);
                - key_argument --> –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ
                  –ø–æ –∏–º–µ–Ω–∏.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø–µ—á–∞—Ç–∞—Ç—å —Ä–æ–≤–Ω–æ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ (–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ):
        üéô –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–±–∞—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!
        üì¢ –ü–æ–ª–∏—Ç–∏–∫–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –¥–æ–≤–æ–¥—ã:
        - <–ø–µ—Ä–≤—ã–π –¥–æ–≤–æ–¥>
        - <–≤—Ç–æ—Ä–æ–π –¥–æ–≤–æ–¥>
        ... (–∫–∞–∂–¥—ã–π –¥–æ–≤–æ–¥ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, —Å –¥–µ—Ñ–∏—Å–æ–º –∏ –ø—Ä–æ–±–µ–ª–æ–º)
        üî• –ö–ª—é—á–µ–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç: <–∑–Ω–∞—á–µ–Ω–∏–µ key_argument>
        ‚úÖ –î–µ–±–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!
    –®–∞–≥ 3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ print() –¥–ª—è –≤—ã–≤–æ–¥–∞. –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
           (–±–µ–∑ return), –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.
    """


def political_debate(*arguments, key_argument):
    print("üéô –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–±–∞—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!\nüì¢ –ü–æ–ª–∏—Ç–∏–∫–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –¥–æ–≤–æ–¥—ã:")
    print("\n".join(f"- {arg}" for arg in arguments))
    print(f"üî• –ö–ª—é—á–µ–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç: {key_argument}")
    print("‚úÖ –î–µ–±–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")


m_11_1_3 = political_debate


# === –ó–∞–¥–∞—á–∞ 4. –õ–æ–≥–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é order_summary(*orders, *, main_order), –≥–¥–µ:
        ‚Äî *orders --> –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
          (—Å—Ç—Ä–æ–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤);
        ‚Äî main_order --> –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∏–º–µ–Ω–∏.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:
        - "orders" --> —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ;
        - "main_order" --> —Å—Ç—Ä–æ–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∑–∞–∫–∞–∑–æ–º –¥–Ω—è.
    –®–∞–≥ 3. –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ; input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
           –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–Ω—É—Ç—å —á–µ—Ä–µ–∑ return.
    """


def order_summary(*orders, main_order):
    result = {"orders": list(orders), "main_order": main_order}
    return result


m_11_1_4 = order_summary


# === –ó–∞–¥–∞—á–∞ 5. –õ–µ–≥–µ–Ω–¥–∞: –ö–æ—Ä–æ–ª—å –õ–µ–∫—Å–∏–∫–æ–Ω–æ–≤ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é lex_min(a: str, b: str) -> str,
           –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏
           –Ω–∞–∏–º–µ–Ω—å—à—É—é.
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é lex_min3(a: str, b: str, c: str) -> str,
           –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∏–∑ —Ç—Ä—ë—Ö —Å—Ç—Ä–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è lex_min.
    –®–∞–≥ 3. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é lex_min4(a: str, b: str, c: str, d: str) -> str,
           –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö —Å—Ç—Ä–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è lex_min.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        ‚Äî –õ–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º
          Python (—É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä —Å–∏–º–≤–æ–ª–æ–≤).
        ‚Äî –§—É–Ω–∫—Ü–∏–∏ –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–∏—Ç—å; –≤—ã–∑—ã–≤–∞—Ç—å –∏—Ö –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
        ‚Äî –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ input() –∏ print() –≤–Ω—É—Ç—Ä–∏ —ç—Ç–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π;
          —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —á–µ—Ä–µ–∑ return.
    """


def m_11_1_5(func_name, data):
    def lex_min(a: str, b: str) -> str:
        return min(a, b)

    def lex_min3(a: str, b: str, c: str) -> str:
        return lex_min(a, lex_min(b, c))

    def lex_min4(a: str, b: str, c: str, d: str) -> str:
        return lex_min(lex_min(a, b), lex_min(c, d))

    # –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    dispatch = {
        "lex_min": lex_min,
        "lex_min3": lex_min3,
        "lex_min4": lex_min4,
    }
    return dispatch[func_name](*data)


# 11.2 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ * –∏ ** –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö


# === –ó–∞–¥–∞—á–∞ 1. –ü–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö CyberMatrix ===

"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –∏–∑ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Ä–æ–≤–Ω–æ 10 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª,
        —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏.
    –®–∞–≥ 2. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–≥–æ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏:
        core_data --> —Å–ø–∏—Å–æ–∫ –∏–∑ –ø–µ—Ä–≤—ã—Ö –ø—è—Ç–∏ —á–∏—Å–µ–ª –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞;
        signal1, signal2, signal3, signal4 --> —Å–ª–µ–¥—É—é—â–∏–µ —á–µ—Ç—ã—Ä–µ —á–∏—Å–ª–∞;
        activation_code --> –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ.
    –®–∞–≥ 3. –í—ã–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ core_data –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.
    –í–∞–∂–Ω–æ: –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ –º–µ–Ω—è—Ç—å. –í–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π.
    """


def m_11_2_1(data: str):
    nums = [int(num) for num in data.split()]
    *core_data, signal1, signal2, signal3, signal4, activation_code = nums
    print(*core_data)


# m_11_2_1(input())

# === –ó–∞–¥–∞—á–∞ 2. –ö–æ–¥–µ–∫—Å –î—Ä–µ–≤–Ω–∏—Ö –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ ===

"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
        ‚Äî –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–≤–∏—Ç–∫–∏ (—ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª);
        ‚Äî –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–ª–∏–∫–≤–∏–∏ (—ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª).
    –®–∞–≥ 2. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ø–∏—Å–∫–∏ scrolls –∏ relics
        —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
    –®–∞–≥ 3. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å–ø–∏—Å–æ–∫ artifact_collection, –≤ –∫–æ—Ç–æ—Ä–æ–º:
        ‚Äî —Å–Ω–∞—á–∞–ª–∞ –∏–¥—É—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ scrolls (–≤ –∏—Ö –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ);
        ‚Äî –∑–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ relics,
          –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ scrolls (–ø–æ—Ä—è–¥–æ–∫ relics —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è).
    –®–∞–≥ 4. –ü—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ artifact_collection –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É *.
    –®–∞–≥ 5. –í—ã–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã artifact_collection –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.
    """


# from sys import stdin


def m_11_2_2(data: str):
    scrolls, relics = (list(line.split()) for line in data.strip().split("\n"))
    artifact_collection = [*scrolls, *(a for a in relics if a not in scrolls)]
    print(*artifact_collection)


# m_11_2_2(stdin.read())
