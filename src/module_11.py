# Stepick.org ‚Äî PRO–∫–æ–¥: –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫—É—Ä—Å –ø–æ Python
# 11. –†–∞–±–æ—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –≤ Python

from sys import stdin
import re


# pylint: disable=W0105


# 11.1 –§—É–Ω–∫—Ü–∏–∏ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤


# === –ó–∞–¥–∞—á–∞ 1. –õ–µ–≥–µ–Ω–¥–∞  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é filter_magic_numbers, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ
           –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–ª–æ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã).
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–ª—å–∫–æ –∏–∑ —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è
           —Å—Ä–µ–¥–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
    –®–∞–≥ 3. –ü–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º —Å–ø–∏—Å–∫–µ –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
           –ø–æ—Ä—è–¥–∫—É –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
    –®–∞–≥ 4. –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ return.

    –ü—Ä–∏–º–µ—á–∞–Ω–∏—è.
    ‚Äî –ß—ë—Ç–Ω—ã–º–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è —á–∏—Å–ª–∞, –∫—Ä–∞—Ç–Ω—ã–µ 2 (–≤–∫–ª—é—á–∞—è 0 –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á—ë—Ç–Ω—ã–µ).
    ‚Äî –ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—é—Ç—Å—è —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞.
    """


def filter_magic_numbers(*args):
    result = [int(arg) for arg in args if arg % 2 == 0]
    return result


m_11_1_1 = filter_magic_numbers


# === –ó–∞–¥–∞—á–∞ 2. –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è: convert_to_latin  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é convert_to_latin(text: str, sep: str = " ") -> str.
    –®–∞–≥ 2. –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
    –®–∞–≥ 3. –ö–∞–∂–¥—É—é –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫—É—é –±—É–∫–≤—É –∑–∞–º–µ–Ω—è–π—Ç–µ –ø–æ —Å–ª–æ–≤–∞—Ä—é s –Ω–∏–∂–µ;
           - –ø—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω—è–π—Ç–µ –Ω–∞ sep;
           - –≤—Å–µ –ø—Ä–æ—á–∏–µ —Å–∏–º–≤–æ–ª—ã (–ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –∏ –¥—Ä.)
             –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
    –®–∞–≥ 4. –í–µ—Ä–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ return.
    –í–∞–∂–Ω–æ: —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å, input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    """


def convert_to_latin(text: str, sep: str = " ") -> str:
    # fmt: off
    s = {'–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '–∂': 'zh',
         '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm', '–Ω': 'n',
         '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f',
         '—Ö': 'h', '—Ü': 'c', '—á': 'ch', '—à': 'sh', '—â': 'shch', '—ã': 'y',
         '—ç': 'e', '—é': 'yu', '—è': 'ya', '—ë': 'yo'}
    # fmt: on
    s[" "] = sep
    converted_text = "".join(s[ch] if ch in s else ch for ch in text.lower())
    return converted_text


m_11_1_2 = convert_to_latin


# === –ó–∞–¥–∞—á–∞ 3. –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–±–∞—Ç—ã  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é def political_debate(*arguments, key_argument),
           –≥–¥–µ:
                - *arguments --> –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ã—á–Ω—ã—Ö –¥–æ–≤–æ–¥–æ–≤
                  (–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã);
                - key_argument --> –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ
                  –ø–æ –∏–º–µ–Ω–∏.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø–µ—á–∞—Ç–∞—Ç—å —Ä–æ–≤–Ω–æ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ (–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ):
        üéô –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–±–∞—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!
        üì¢ –ü–æ–ª–∏—Ç–∏–∫–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –¥–æ–≤–æ–¥—ã:
        - <–ø–µ—Ä–≤—ã–π –¥–æ–≤–æ–¥>
        - <–≤—Ç–æ—Ä–æ–π –¥–æ–≤–æ–¥>
        ... (–∫–∞–∂–¥—ã–π –¥–æ–≤–æ–¥ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, —Å –¥–µ—Ñ–∏—Å–æ–º –∏ –ø—Ä–æ–±–µ–ª–æ–º)
        üî• –ö–ª—é—á–µ–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç: <–∑–Ω–∞—á–µ–Ω–∏–µ key_argument>
        ‚úÖ –î–µ–±–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!
    –®–∞–≥ 3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ print() –¥–ª—è –≤—ã–≤–æ–¥–∞. –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
           (–±–µ–∑ return), –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.
    """


def political_debate(*arguments, key_argument):
    print("üéô –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–±–∞—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!\nüì¢ –ü–æ–ª–∏—Ç–∏–∫–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –¥–æ–≤–æ–¥—ã:")
    print("\n".join(f"- {arg}" for arg in arguments))
    print(f"üî• –ö–ª—é—á–µ–≤–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç: {key_argument}")
    print("‚úÖ –î–µ–±–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")


m_11_1_3 = political_debate


# === –ó–∞–¥–∞—á–∞ 4. –õ–æ–≥–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤  ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é order_summary(*orders, *, main_order), –≥–¥–µ:
        ‚Äî *orders --> –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
          (—Å—Ç—Ä–æ–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤);
        ‚Äî main_order --> –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∏–º–µ–Ω–∏.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:
        - "orders" --> —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ;
        - "main_order" --> —Å—Ç—Ä–æ–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∑–∞–∫–∞–∑–æ–º –¥–Ω—è.
    –®–∞–≥ 3. –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ; input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
           –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–Ω—É—Ç—å —á–µ—Ä–µ–∑ return.
    """


def order_summary(*orders, main_order):
    result = {"orders": list(orders), "main_order": main_order}
    return result


m_11_1_4 = order_summary


# === –ó–∞–¥–∞—á–∞ 5. –õ–µ–≥–µ–Ω–¥–∞: –ö–æ—Ä–æ–ª—å –õ–µ–∫—Å–∏–∫–æ–Ω–æ–≤ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é lex_min(a: str, b: str) -> str,
           –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏
           –Ω–∞–∏–º–µ–Ω—å—à—É—é.
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é lex_min3(a: str, b: str, c: str) -> str,
           –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∏–∑ —Ç—Ä—ë—Ö —Å—Ç—Ä–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è lex_min.
    –®–∞–≥ 3. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é lex_min4(a: str, b: str, c: str, d: str) -> str,
           –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö —Å—Ç—Ä–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è lex_min.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        ‚Äî –õ–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º
          Python (—É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä —Å–∏–º–≤–æ–ª–æ–≤).
        ‚Äî –§—É–Ω–∫—Ü–∏–∏ –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–∏—Ç—å; –≤—ã–∑—ã–≤–∞—Ç—å –∏—Ö –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
        ‚Äî –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ input() –∏ print() –≤–Ω—É—Ç—Ä–∏ —ç—Ç–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π;
          —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —á–µ—Ä–µ–∑ return.
    """


def m_11_1_5(func_name, data):
    def lex_min(a: str, b: str) -> str:
        return min(a, b)

    def lex_min3(a: str, b: str, c: str) -> str:
        return lex_min(a, lex_min(b, c))

    def lex_min4(a: str, b: str, c: str, d: str) -> str:
        return lex_min(lex_min(a, b), lex_min(c, d))

    # –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    dispatch = {
        "lex_min": lex_min,
        "lex_min3": lex_min3,
        "lex_min4": lex_min4,
    }
    return dispatch[func_name](*data)


# 11.2 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ * –∏ ** –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö


# === –ó–∞–¥–∞—á–∞ 1. –ü–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö CyberMatrix ===

"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –∏–∑ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Ä–æ–≤–Ω–æ 10 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª,
        —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏.
    –®–∞–≥ 2. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–≥–æ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏:
        core_data --> —Å–ø–∏—Å–æ–∫ –∏–∑ –ø–µ—Ä–≤—ã—Ö –ø—è—Ç–∏ —á–∏—Å–µ–ª –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞;
        signal1, signal2, signal3, signal4 --> —Å–ª–µ–¥—É—é—â–∏–µ —á–µ—Ç—ã—Ä–µ —á–∏—Å–ª–∞;
        activation_code --> –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ.
    –®–∞–≥ 3. –í—ã–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ core_data –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.
    –í–∞–∂–Ω–æ: –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ –º–µ–Ω—è—Ç—å. –í–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π.
    """


def m_11_2_1(data: str):
    nums = [int(num) for num in data.split()]
    *core_data, signal1, signal2, signal3, signal4, activation_code = nums
    print(*core_data)


# m_11_2_1(input())

# === –ó–∞–¥–∞—á–∞ 2. –ö–æ–¥–µ–∫—Å –î—Ä–µ–≤–Ω–∏—Ö –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ ===

"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
        ‚Äî –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–≤–∏—Ç–∫–∏ (—ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª);
        ‚Äî –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–ª–∏–∫–≤–∏–∏ (—ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª).
    –®–∞–≥ 2. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ø–∏—Å–∫–∏ scrolls –∏ relics
        —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
    –®–∞–≥ 3. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å–ø–∏—Å–æ–∫ artifact_collection, –≤ –∫–æ—Ç–æ—Ä–æ–º:
        ‚Äî —Å–Ω–∞—á–∞–ª–∞ –∏–¥—É—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ scrolls (–≤ –∏—Ö –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ);
        ‚Äî –∑–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ relics,
          –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ scrolls (–ø–æ—Ä—è–¥–æ–∫ relics —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è).
    –®–∞–≥ 4. –ü—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ artifact_collection –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É *.
    –®–∞–≥ 5. –í—ã–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã artifact_collection –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.
    """


# from sys import stdin


def m_11_2_2(data: str):
    scrolls, relics = (list(line.split()) for line in data.strip().split("\n"))
    artifact_collection = [*scrolls, *(a for a in relics if a not in scrolls)]
    print(*artifact_collection)


# m_11_2_2(stdin.read())


# 11.3 –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏


# === –ó–∞–¥–∞—á–∞ 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ ===

"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é count_messages(thread) -> int,
        –≥–¥–µ thread --> —Å–ø–∏—Å–æ–∫, —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä–æ–≥–æ:
            ‚Äî –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏ (str);
            ‚Äî —Å–ø–∏—Å–∫–∏-–≤–µ—Ç–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å
              —Å—Ç—Ä–æ–∫–∏ –∏/–∏–ª–∏ –Ω–æ–≤—ã–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±–æ–π—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª—é–±–æ–π –≥–ª—É–±–∏–Ω—ã
        –∏ –≤–µ—Ä–Ω—É—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π (—Å—Ç—Ä–æ–∫).
        –°—Ç—Ä–æ–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ü—É—Å—Ç—ã–µ —Å–ø–∏—Å–∫–∏ –¥–∞—é—Ç –≤–∫–ª–∞–¥ 0.
    –®–∞–≥ 3. –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏
        return (–Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞—Ç—å). –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ;
        input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
     """


def count_messages(thread) -> int:
    return sum(
        1 if isinstance(message, str) and message else count_messages(message)
        for message in thread
    )


m_11_3_1 = count_messages

# === –ó–∞–¥–∞—á–∞ 2. –ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –±–∏—Ç–∫–æ–∏–Ω—ã -> –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ ===

"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é get_wallet_balance(transactions),
        –≥–¥–µ transactions --> —Å–ø–∏—Å–æ–∫ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏
        –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö), –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö —Å—É–º–º—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ–¥–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ --> –∏—Ç–æ–≥–æ–≤—ã–π
        –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ (—Å—É–º–º—É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞).
    –®–∞–≥ 3. –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–π—Ç–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏; –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ return.
        –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ --> –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –≤ —Å–∫—Ä—ã—Ç–æ–π —á–∞—Å—Ç–∏ —Å
        —É–∂–µ —Å—á–∏—Ç–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í–≤–æ–¥ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ –∏–∑ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö
        –ø—Ä–æ–±–µ–ª–∞–º–∏; —Ç–µ—Å—Ç–∏—Ä—É—é—â–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –≤ —Å–ø–∏—Å–æ–∫ –∏ –ø–µ—Ä–µ–¥–∞—Å—Ç
        –≤ –≤–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é get_wallet_balance.
    """


def get_wallet_balance(transactions):
    # return sum(transactions) <= —Ä–µ—à–µ–Ω–∏–µ, –Ω–æ —Ä–∞–∑ —Ç–µ–º–∞ —Ä–µ–∫—É—Ä—Å–∏–∏...
    if not transactions:
        return 0
    return transactions[0] + get_wallet_balance(transactions[1:])


m_11_3_2 = get_wallet_balance


# === –ó–∞–¥–∞—á–∞ 3. –ò–ò –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===

"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é flatten_data(data) -> list,
        –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏.
    –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–º–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –æ–±—Ö–æ–¥–∞ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ.
    –®–∞–≥ 3. –í–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–∫–∏ (list).
        –°—Ç—Ä–æ–∫–∏ –∏ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –∞—Ç–æ–º–∞—Ä–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏ –Ω–µ –∏—Ç–µ—Ä–∏—Ä—É—é—Ç—Å—è.
    –®–∞–≥ 4. –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏ return -->
        –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞—Ç—å. –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ; input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
        –ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—è—Ç—å –Ω–µ–ª—å–∑—è.
    –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:
        ‚Äî –†–µ–∫—É—Ä—Å–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞.
        ‚Äî –ü—É—Å—Ç—ã–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è—é—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
        ‚Äî –ü–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.
    """


def flatten_data(data) -> list:
    result = []
    for item in data:
        if isinstance(item, list):
            result.extend(flatten_data(item))
        else:
            result.append(item)
    return result


m_11_3_3 = flatten_data

# 11.4 –ï–≤–∫–ª–∏–¥–æ–≤ –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –ù–û–î


# === –ó–∞–¥–∞—á–∞ 1. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –∫–æ—Å–º–æ—Å: –ù–û–î –ø–æ –ï–≤–∫–ª–∏–¥—É ===

"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞, –∫–∞–∂–¥–æ–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
    –®–∞–≥ 2. –í—ã—á–∏—Å–ª–∏—Ç–µ –∏—Ö –ù–û–î –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É –ï–≤–∫–ª–∏–¥–∞
        (–¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –∏—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∏–ª–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è).
    –®–∞–≥ 3. –í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
        –ù–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å —á–∏—Å–µ–ª —Ä–∞–≤–µ–Ω: <—á–∏—Å–ª–æ>
    """

# from sys import stdin


def m_11_4_1(data: str):
    def gcd(a, b):
        if b == 0:
            return a
        return gcd(b, a % b)

    n1, n2 = sorted(map(int, data.strip().split("\n")))
    return f"–ù–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å —á–∏—Å–µ–ª —Ä–∞–≤–µ–Ω: {gcd(n1, n2)}"


# print(m_11_4_1(stdin.read()))


# 11.5 –ê–Ω–æ–Ω–∏–º–Ω—ã–µ (lambda) —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ


# === –ó–∞–¥–∞—á–∞ 1.–§–∏–ª—å—Ç—Ä –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ ¬´C¬ª ===
"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –∑–∞–ø—è—Ç—ã–º–∏
        (–ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ –Ω–∞–∑–≤–∞–Ω–∏–π –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ).
    –®–∞–≥ 2. –û—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π
        –ª–∞—Ç–∏–Ω—Å–∫–æ–π –±—É–∫–≤—ã C.
    –®–∞–≥ 3. –ò–∑ –Ω–∏—Ö –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–≥–æ –±–æ–ª—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤.
    –®–∞–≥ 4. –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–∏–≤—à–∏–µ—Å—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ –¥–ª–∏–Ω–µ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.
    –®–∞–≥ 5. –í—ã–≤–µ–¥–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ (Python-—Å–ø–∏—Å–æ–∫) –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ lambda –≤–º–µ—Å—Ç–µ —Å filter() –∏ sorted().
    """


def m_11_5_1(data: str):
    animals = map(str.strip, data.split(","))
    return sorted(filter(lambda a: a[0] == "C" and len(a) > 3, animals), key=len)


# print(m_11_5_1(input()))


# === –ó–∞–¥–∞—á–∞ 2. –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ —Ç—Ä—ë—Ö: —Ñ–∏–ª—å—Ç—Ä—É–µ–º –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º ===
"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏.
    –®–∞–≥ 2. –° –ø–æ–º–æ—â—å—é filter() –∏ lambda –æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ
        –¥–µ–ª—è—Ç—Å—è –Ω–∞ 3 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞.
    –®–∞–≥ 3. –° –ø–æ–º–æ—â—å—é map() –∏ lambda —É–º–Ω–æ–∂—å—Ç–µ –∫–∞–∂–¥–æ–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –Ω–∞ 2.
    –®–∞–≥ 4. –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Å –ø–æ–º–æ—â—å—é sorted().
    –®–∞–≥ 5. –í—ã–≤–µ–¥–∏—Ç–µ –∏—Ç–æ–≥ –≤ –≤–∏–¥–µ Python-—Å–ø–∏—Å–∫–∞.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å lambda, filter(), map() –∏ sorted()
        –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —à–∞–≥–æ–≤.
    """


def m_11_5_2(data: str):
    return sorted(
        map(lambda n: n * 2, filter(lambda n: n % 3 == 0, map(int, data.split())))
    )


# print(m_11_5_2(input()))


# === –ó–∞–¥–∞—á–∞ 3. –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è —Ä–æ–±–æ—Ç–æ–≤ –Ω–∞ –∑–∞–≤–æ–¥–µ ===
"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–±–æ—Ç–æ–≤ N.
    –®–∞–≥ 2. –°—á–∏—Ç–∞–π—Ç–µ N —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä–æ–±–æ—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <–≤–µ—Å> <–º–æ—â–Ω–æ—Å—Ç—å>.
    –®–∞–≥ 3. –° –ø–æ–º–æ—â—å—é map() –∏ lambda —É–≤–µ–ª–∏—á—å—Ç–µ –º–æ—â–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —Ä–æ–±–æ—Ç–∞ –Ω–∞ 20%
        (—É–º–Ω–æ–∂—å—Ç–µ –Ω–∞ 1.2).
    –®–∞–≥ 4. –° –ø–æ–º–æ—â—å—é filter() –∏ lambda –æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —Ä–æ–±–æ—Ç–æ–≤,
        —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–æ–≤–∞—è –º–æ—â–Ω–æ—Å—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 100.
    –®–∞–≥ 5. –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ä–æ–±–æ—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é sorted()
        –∏ lambda –ø–æ –≤–µ—Å—É (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é).
    –®–∞–≥ 6. –û–∫—Ä—É–≥–ª–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—É—é –º–æ—â–Ω–æ—Å—Ç—å –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
        –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
    –®–∞–≥ 7. –í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ Python-—Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (–≤–µ—Å, –º–æ—â–Ω–æ—Å—Ç—å).
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (lambda) –≤–º–µ—Å—Ç–µ —Å map(),
        filter(), sorted() –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —à–∞–≥–æ–≤.
    """

# from sys import stdin


def m_11_5_3(data: str):
    robots = [tuple(map(int, line.split())) for line in data.split("\n")[1:]]
    return sorted(
        filter(
            lambda r: r[1] >= 100, map(lambda r: (r[0], round(r[1] * 1.2, 2)), robots)
        ),
        key=lambda r: r[0],
    )


# print(m_11_5_3(stdin.read()))


# === –ó–∞–¥–∞—á–∞ 4. –ü–æ–¥–∞—Ä–∫–∏ –Ω–∞ –†–æ–∂–¥–µ—Å—Ç–≤–æ ===
"""
    - –ó–∞–ø—Ä–æ—Å–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).
    - –î–∞–ª–µ–µ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ—á–∏—Ç–∞–π —Ü–µ–Ω—ã –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
      (–∫–∞–∂–¥–∞—è —Ü–µ–Ω–∞ —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –≤—Å–µ–≥–æ —Å—Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫, —Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π).
    - –ü—Ä–∏–º–µ–Ω—è–π —Å–∫–∏–¥–∫—É 10% –∫–æ –≤—Å–µ–º —Ü–µ–Ω–∞–º —Å –ø–æ–º–æ—â—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (lambda).
      –¢–æ –µ—Å—Ç—å, –Ω–æ–≤–∞—è —Ü–µ–Ω–∞ = —Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ –º–∏–Ω—É—Å 10%.
    - –í—ã–≤–µ–¥–∏ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ü–µ–Ω –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏.
      –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ–∫—Ä—É–≥–ª–∏ –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.
    """

# from sys import stdin


def m_11_5_4(data: str):
    prices = map(int, data.strip().split("\n")[1:])
    discount = map(lambda p: round(p * 0.9, 2), prices)
    return list(discount)


# print(m_11_5_4(stdin.read()))


# === –ó–∞–¥–∞—á–∞ 5. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö –∫–Ω–∏–≥ ===
"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ N --> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π.
    –®–∞–≥ 2. –°—á–∏—Ç–∞–π—Ç–µ N —Å—Ç—Ä–æ–∫. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
        –∏ –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è. –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã;
        –≥–æ–¥ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫–µ.
    –®–∞–≥ 3. –° –ø–æ–º–æ—â—å—é filter() –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ lambda –æ—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –∫–Ω–∏–≥–∏,
        —É –∫–æ—Ç–æ—Ä—ã—Ö –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ > 2000.
    –®–∞–≥ 4. –í—ã–≤–µ–¥–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –≤ –æ–¥–Ω–æ–º Python-—Å–ø–∏—Å–∫–µ –≤ –ø–æ—Ä—è–¥–∫–µ
        –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –≤–≤–æ–¥–∞. –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ.


    """


# from sys import stdin


def m_11_5_5(data: str):
    books = [
        (name, int(year))
        for line in data.strip().split("\n")[1:]
        for name, year in [line.rsplit(" ", 1)]
    ]
    result = map(lambda name: name[0], (filter(lambda book: book[1] > 2000, books)))
    return f"–ö–Ω–∏–≥–∏, –≤—ã–ø—É—â–µ–Ω–Ω—ã–µ –ø–æ—Å–ª–µ 2000 –≥–æ–¥–∞:\n{list(result)}"


# print(m_11_5_5(stdin.read()))


# === –ó–∞–¥–∞—á–∞ 6. –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ ===
"""
    –®–∞–≥ 1. –°—á–∏—Ç–∞–π—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ N --> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π.
    –®–∞–≥ 2. –°—á–∏—Ç–∞–π—Ç–µ N —Å—Ç—Ä–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ù–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥, —Å—Ç–æ–∏–º–æ—Å—Ç—å.
        –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã;
        –≥–æ–¥ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å --> —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è;
        —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å --> –∑–∞–ø—è—Ç–∞—è —Å –ø—Ä–æ–±–µ–ª–æ–º (–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ).
    –®–∞–≥ 3. –° –ø–æ–º–æ—â—å—é filter() –∏ lambda –∏—Å–∫–ª—é—á–∏—Ç–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã,
        —É –∫–æ—Ç–æ—Ä—ã—Ö –≥–æ–¥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –º–µ–Ω—å—à–µ 2000.
    –®–∞–≥ 4. –° –ø–æ–º–æ—â—å—é map() –∏ lambda —É–≤–µ–ª–∏—á—å—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
        –Ω–∞ 25% (—É–º–Ω–æ–∂—å—Ç–µ –Ω–∞ 1.25) –∏ –æ–∫—Ä—É–≥–ª–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
        –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.
    –®–∞–≥ 5. –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø–æ–º–æ—â—å—é sorted() –∏ lambda
        –ø–æ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.
    –®–∞–≥ 6. –í—ã–≤–µ–¥–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–∫ Python-—Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
        [(–ù–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥, –Ω–æ–≤–∞—è_—Å—Ç–æ–∏–º–æ—Å—Ç—å), ...]
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å lambda, filter(), map(), sorted()
        –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —à–∞–≥–æ–≤.
    """


# from sys import stdin


def m_11_5_6(data: str):
    artifacts = [
        (name, int(year), int(cost))
        for line in data.strip().split("\n")[1:]
        for name, year, cost in [line.split(", ")]
    ]
    result = sorted(
        map(
            lambda a: (a[0], a[1], round(a[-1] * 1.25, 2)),
            filter(lambda a: a[1] >= 2000, artifacts),
        ),
        key=lambda a: a[-1],
    )
    return f"–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n{result}"


# print(m_11_5_6(stdin.read()))


# 11.6 –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∑–∞–º—ã–∫–∞–Ω–∏—è


# === –ó–∞–¥–∞—á–∞ 1. –£—Å–∫–æ—Ä–∏—Ç–µ–ª—å –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π ===
"""
    - –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é speed_booster(), –∫–æ—Ç–æ—Ä–∞—è –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è —Å–æ–∑–¥–∞—ë—Ç
      –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –∏–º–µ–Ω–µ–º boost(speed).
    - –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è boost –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω–æ —á–∏—Å–ª–æ --> —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏
      –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ —á–∏—Å–ª–æ, —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –Ω–∞ 10%
      (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π).
    - –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è speed_booster() –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞
      —Ñ—É–Ω–∫—Ü–∏—é boost. –¢–æ –µ—Å—Ç—å, —Å–æ–∑–¥–∞–π –∑–∞–º—ã–∫–∞–Ω–∏–µ: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è
      –¥–æ–ª–∂–Ω–∞ –ø–æ–º–Ω–∏—Ç—å –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã.
    - –í—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é speed_booster() –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è --> —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–∏—Ç—å –µ—ë.
    –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–∑–æ–≤–∏ –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–º–µ–Ω–Ω–æ boost, –∞ –ø–∞—Ä–∞–º–µ—Ç—Ä speed.
      –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!
    """


def speed_booster():
    def boost(speed: int):
        return round(speed * 1.1, 2)

    return boost


m_11_6_1 = speed_booster()


# === –ó–∞–¥–∞—á–∞ 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é headline_formatter() –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
    –®–∞–≥ 2. –í–Ω—É—Ç—Ä–∏ –Ω–µ—ë —Å–æ–∑–¥–∞–π—Ç–µ –∏ –≤–µ—Ä–Ω–∏—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é (–∑–∞–º—ã–∫–∞–Ω–∏–µ),
        –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É.
    –®–∞–≥ 3. –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
        <h2>–ó–¥–µ—Å—å —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π</h2>.
    –®–∞–≥ 4. –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–π—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ return. –§—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å
        –Ω–µ –Ω—É–∂–Ω–æ —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç —Å–∫—Ä—ã—Ç–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞.
    –®–∞–≥ 5. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ input().
    """


def headline_formatter():
    def formatted_title(title: str):
        return f"<h2>{title}</h2>"

    return formatted_title


m_11_6_2 = headline_formatter()

# print(m_11_6_2(input()))


# === –ó–∞–¥–∞—á–∞ 3. –§–∏–ª—å—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é data_converter(tp),
        –≥–¥–µ tp --> —Å—Ç—Ä–æ–∫–∞ "list" –∏–ª–∏ "tuple".
    –®–∞–≥ 2. –í–Ω—É—Ç—Ä–∏ –Ω–µ—ë —Å–æ–∑–¥–∞–π—Ç–µ –∏ –≤–µ—Ä–Ω–∏—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é,
        –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–∞–º–∏, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏.
    –®–∞–≥ 3. –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤
        –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –∏ –≤–µ—Ä–Ω—É—Ç—å:
            - list[int], –µ—Å–ª–∏ tp == "list";
            - tuple[int, ...], –µ—Å–ª–∏ tp == "tuple".
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–∏—Ç—å;
        - –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç —Å–∫—Ä—ã—Ç–∞—è —á–∞—Å—Ç—å —Ç–µ—Å—Ç–æ–≤.
        - –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ return.
        - input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    """


def m_11_6_3(data: str):
    def data_converter(tp: str):
        def converter(data: str, d_type=tp):
            nums = map(int, data.split())
            return (list if d_type == "list" else tuple)(nums)

        return converter

    # –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    data_type, data_nums = data.split("\n")
    return data_converter(data_type)(data_nums)


# 11.7 –û–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ global –∏ nonlocal


# === –ó–∞–¥–∞—á–∞ 1.–í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ ===
"""
    –®–∞–≥ 1. –í –ø—Ä–æ–≥—Ä–∞–º–º–µ —É–∂–µ –∑–∞–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è initialize_data()
        —Å –≤–ª–æ–∂–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π update_data().
    –®–∞–≥ 2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è username,
        –æ–±—ä—è–≤–ª–µ–Ω–Ω–∞—è –≤ initialize_data(), –∏–∑–º–µ–Ω—è–ª–∞—Å—å –≤–Ω—É—Ç—Ä–∏ update_data().
    –®–∞–≥ 3. –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ
        –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–≤–∞–∂–¥—ã:
            ‚Äî –æ–¥–∏–Ω —Ä–∞–∑ –≤–Ω—É—Ç—Ä–∏ update_data() (—Ç–∞–º —É–∂–µ –µ—Å—Ç—å print),
            ‚Äî –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ update_data() –≤ initialize_data()
              (—Ç–∞–º —Ç–æ–∂–µ —É–∂–µ –µ—Å—Ç—å print).
    –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
            ‚Äì –ù–µ –º–µ–Ω—è–π—Ç–µ –∏–º–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π username.
            ‚Äì –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø—Ä–∏–º–µ—Ä–æ–º.
    """


def m_11_7_1():
    def initialize_data():
        username = input()

        def update_data():
            nonlocal username
            username = input()
            print(username)

        update_data()
        print(username)

    initialize_data()


# === –ó–∞–¥–∞—á–∞ 2.–•–∞–∫–µ—Ä—Å–∫–∏–π –ø–æ–µ–¥–∏–Ω–æ–∫: global –∏ nonlocal ===


"""
    –®–∞–≥ 1. –ù–∞ —É—Ä–æ–≤–Ω–µ –º–æ–¥—É–ª—è –æ–±—ä—è–≤–∏—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        security_level –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 0.
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é hack_system(), –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π:
        - —Å –ø–æ–º–æ—â—å—é –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ global –∏–∑–º–µ–Ω–∏—Ç–µ security_level –Ω–∞ 5;
        - –æ–±—ä—è–≤–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é defense_level –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–π 0;
        - –æ–±—ä—è–≤–∏—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é defend_system(), –≤ –∫–æ—Ç–æ—Ä–æ–π
          —Å –ø–æ–º–æ—â—å—é nonlocal –∏–∑–º–µ–Ω–∏—Ç–µ defense_level –Ω–∞ 10;
        - –≤—ã–∑–æ–≤–∏—Ç–µ defend_system();
        - –≤–µ—Ä–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ defense_level.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
        - –ò–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–π –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å:
          security_level, hack_system, defend_system, defense_level.
        - –§—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ; input() –∏ print() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
        - –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ return.
    """

security_level = 0


def hack_system():
    def defend_system():
        nonlocal defense_level
        defense_level = 10

    global security_level
    security_level = 5
    defense_level = 0
    defend_system()
    return defense_level


m_11_7_2 = hack_system


# print(m_11_7_2(input()))


# === –ó–∞–¥–∞—á–∞ 3. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–µ–π –≤ —É–º–Ω–æ–º –¥–æ–º–µ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é energy_control() –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
    –®–∞–≥ 2. –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ä—è–≤–∏—Ç–µ, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
        total_energy --> –≥–ª–æ–±–∞–ª—å–Ω–∞—è (global total_energy)
        –∏ —É–º–µ–Ω—å—à–∏—Ç–µ –µ—ë –Ω–∞ 20 (–≤ –ø—Ä–∏–º–µ—Ä–µ —Å 100 –¥–æ 80).
    –®–∞–≥ 3. –û–±—ä—è–≤–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é,
        –Ω–∞–ø—Ä–∏–º–µ—Ä room = 0 --> —Ç–µ–∫—É—â–∞—è —ç–Ω–µ—Ä–≥–∏—è –∫–æ–º–Ω–∞—Ç—ã.
    –®–∞–≥ 4. –û–±—ä—è–≤–∏—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é room_energy(),
        –≥–¥–µ —Å –ø–æ–º–æ—â—å—é nonlocal room –∏–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ room –Ω–∞ 30.
    –®–∞–≥ 5. –í—ã–∑–æ–≤–∏—Ç–µ room_energy() –≤–Ω—É—Ç—Ä–∏ energy_control().
    –®–∞–≥ 6. –í–µ—Ä–Ω–∏—Ç–µ –∏–∑ energy_control() –∫–æ—Ä—Ç–µ–∂ –∏–∑ –¥–≤—É—Ö –∑–Ω–∞—á–µ–Ω–∏–π:
        (total_energy, room).

    –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ global (–¥–ª—è total_energy)
          –∏ nonlocal (–¥–ª—è room).
        - –ò–º–µ–Ω–∞ –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å: total_energy, energy_control, room_energy.
        - –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞—Ç—å, input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. –§—É–Ω–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–∏—Ç—å
          --> –µ—ë –≤—ã–∑–æ–≤ —Å–¥–µ–ª–∞—é—Ç —Å–∫—Ä—ã—Ç—ã–µ —Ç–µ—Å—Ç—ã.
    """

total_energy = 100


def energy_control():
    def room_energy():
        nonlocal room
        room = 30

    global total_energy
    total_energy -= 20
    room = 0
    room_energy()

    return (total_energy, room)


m_11_7_3 = energy_control


# 11.8 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π


# === –ó–∞–¥–∞—á–∞ 1. –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calculate_area(width, height), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
        –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ width * height. –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç.
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä display_result(func), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
        –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ë—Ä—Ç–∫—É. –û–±—ë—Ä—Ç–∫–∞ –¥–æ–ª–∂–Ω–∞:
            ‚Äî –≤—ã–∑—ã–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏;
            ‚Äî –ø–æ–ª—É—á–∏—Ç—å –µ—ë —á–∏—Å–ª–æ–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç;
            ‚Äî —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —Ä–æ–≤–Ω–æ —Å—Ç—Ä–æ–∫—É: üìè –ü–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è: <–∑–Ω–∞—á–µ–Ω–∏–µ> –º¬≤
              (–æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ –º¬≤);
            ‚Äî –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              (–Ω–∞ —Å–ª—É—á–∞–π –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è).
    –®–∞–≥ 3. –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –Ω–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤—Ä—É—á–Ω—É—é —Å @display_result;
        —Å–∫—Ä—ã—Ç–∞—è —á–∞—Å—Ç—å —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ —Ç–∞–∫:
            decorated = display_result(calculate_area)
            decorated(w, h)
    –®–∞–≥ 4. –§—É–Ω–∫—Ü–∏–∏ –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, input() –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        –í—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–æ–ª—å–∫–æ –æ–±—ë—Ä—Ç–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞.
        –§–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å–∏–º–≤–æ–ª-–≤-—Å–∏–º–≤–æ–ª.
        calculate_area –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç --> —Ç–æ–ª—å–∫–æ return.
    """


def display_result(func):
    def wrapper(*args):
        area = func(*args)
        print(f"üìè –ü–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è: {area} –º¬≤")
        return area

    return wrapper


# @display_result <= –ø–æ —É—Å–ª–æ–≤–∏—é –Ω–µ –Ω—É–∂–Ω–æ
def calculate_area(width, height):
    return width * height


m_11_8_1 = display_result(calculate_area)


# === –ó–∞–¥–∞—á–∞ 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é split_words(str1, str2), –∫–æ—Ç–æ—Ä–∞—è:
        - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–µ —Å—Ç—Ä–æ–∫–∏;
        - —Ä–∞–∑–±–∏–≤–∞–µ—Ç –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ª–æ–≤–∞ –º–µ—Ç–æ–¥–æ–º split();
        - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ –∏–∑ –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤ —Å–ª–æ–≤: (list1, list2).
    –®–∞–≥ 2. –û–±—ä—è–≤–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä make_dict(func), –∫–æ—Ç–æ—Ä—ã–π:
        - –≤—ã–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –Ω–µ—ë –¥–≤–∞ —Å–ø–∏—Å–∫–∞;
        - —Å–æ–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –ø–æ–º–æ—â—å—é zip() –∏ dict() —Ç–∞–∫, —á—Ç–æ–±—ã –∫–ª—é—á–∏
          –±—Ä–∞–ª–∏—Å—å –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ;
        - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å.
    –®–∞–≥ 3. –ü—Ä–∏–º–µ–Ω–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫ —Ñ—É–Ω–∫—Ü–∏–∏:
            @make_dict
            def split_words(str1, str2):
                ...
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –ù–∏–∫–∞–∫–∏—Ö print() –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π --> –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω–∏ —Å–ª–æ–≤–∞—Ä—å.
        - –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∫—Ä—ã—Ç–∞—è —á–∞—Å—Ç—å —Ç–µ—Å—Ç–æ–≤.
        - –ò—Ç–æ–≥–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ –∫–ª—é—á–∞–º
          –∏ –≤—ã–≤–µ–¥–µ–Ω –≤ –≤–∏–¥–µ –ø–∞—Ä (–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ).
    """


def make_dict(func):
    def wrapper(*args):
        result = dict(zip(*func(*args)))
        return result

    return wrapper


@make_dict
def split_words(str1, str2):
    result = tuple(s.split() for s in (str1, str2))
    return result


m_11_8_2 = split_words


# === –ó–∞–¥–∞—á–∞ 3. –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ—É–Ω–∫—Ü–∏—é ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä validate_positive(), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
        –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ë—Ä—Ç–∫—É. –û–±—ë—Ä—Ç–∫–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π
        —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä n:
            - –µ—Å–ª–∏ n > 0, –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
              –∏ –≤–µ—Ä–Ω—É—Ç—å –µ—ë —Ä–µ–∑—É–ª—å—Ç–∞—Ç;
            - –µ—Å–ª–∏ n <= 0, –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É —Ä–æ–≤–Ω–æ:
              –û—à–∏–±–∫–∞: —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é square_root(n), –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π
        –∫–æ—Ä–µ–Ω—å –∏–∑ n –∏ –æ–∫—Ä—É–≥–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
        (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ round(..., 2)). –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç --> —Ç–æ–ª—å–∫–æ return.
    –®–∞–≥ 3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é @validate_positive.
    –®–∞–≥ 4. –§—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è --> –≤—ã–∑—ã–≤–∞—Ç—å –∏—Ö –Ω–µ –Ω—É–∂–Ω–æ;
        –≤–≤–æ–¥/–≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç —Å–∫—Ä—ã—Ç–∞—è —á–∞—Å—Ç—å —Ç–µ—Å—Ç–æ–≤.
        –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ print() –∏ input().
    """


def validate_positive(func):
    def wrapper(n):
        result = func(n) if n > 0 else "–û—à–∏–±–∫–∞: —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!"
        return result

    return wrapper


@validate_positive
def square_root(n):
    return round(n**0.5, 2)


m_11_8_3 = square_root


# 11.9 –ê—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞—Ö —Ñ—É–Ω–∫—Ü–∏–π


# === –ó–∞–¥–∞—á–∞ 1. –£–º–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä add_starting_balance(start),
        –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ start –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
        –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–±–∞–≤–ª—è—Ç—å start –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calculate_expenses(data), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
        –∏–∑ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ—ë –≤ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
        –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É.
    –®–∞–≥ 3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫ calculate_expenses —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º start=5
        (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ @add_starting_balance(5)).
    –®–∞–≥ 4. –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞–π—Ç–µ –∏ –Ω–µ –≤—ã–∑—ã–≤–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ --> –≤–≤–æ–¥/–≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç
        –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è —Å–∏—Å—Ç–µ–º–∞. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ return.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        ‚Äî –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (add_starting_balance(start)).
        ‚Äî –°—É–º–º–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∏ –ø—Ä–∏–±–∞–≤–∏—Ç—å 5 –∫ —Å—É–º–º–µ —á–µ—Ä–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
        ‚Äî –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å input() –∏ print().
    """


def add_starting_balance(start):
    def decorator(func):
        def wrapper(*args):
            return func(*args) + start

        return wrapper

    return decorator


@add_starting_balance(5)
def calculate_expenses(data):
    result = sum(map(int, data.split()))
    return result


m_11_9_1 = calculate_expenses


# === –ó–∞–¥–∞—á–∞ 2. –ê–≤—Ç–æ-—Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é transliterate(text), –∫–æ—Ç–æ—Ä–∞—è:
        - –ø—Ä–∏–≤–æ–¥–∏—Ç –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É;
        - –∑–∞–º–µ–Ω—è–µ—Ç —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –ø–æ —Å–ª–æ–≤–∞—Ä—é –Ω–∏–∂–µ;
        - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É.
        –°–ª–æ–≤–∞—Ä—å —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ (–Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä):
        translit_map = {
            '—ë': 'yo', '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd',
            '–µ': 'e', '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k',
            '–ª': 'l', '–º': 'm', '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r',
            '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'h', '—Ü': 'c',
            '—á': 'ch', '—à': 'sh', '—â': 'shch', '—ä': '', '—ã': 'y', '—å': '',
            '—ç': 'e', '—é': 'yu', '—è': 'ya'
            }
    –®–∞–≥ 2. –û–±—ä—è–≤–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä clean_text(chars), –∫–æ—Ç–æ—Ä—ã–π:
        - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–∏–º–≤–æ–ª–æ–≤ chars (–Ω–∞–±–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∏—Ç—å);
        - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –æ–±–æ—Ä–∞—á–∏–≤–∞—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏—é;
        - –≤ –æ–±—ë—Ä—Ç–∫–µ:
            - –ø–æ–ª—É—á–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å—Ö–æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∞);
            - –∑–∞–º–µ–Ω—è–µ—Ç –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –∏–∑ chars –Ω–∞ '+';
            - —Å—Ö–ª–æ–ø—ã–≤–∞–µ—Ç —Å–µ—Ä–∏–∏ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö '+' –¥–æ –æ–¥–Ω–æ–≥–æ '+';
            - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—á–∏—â–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É.
    –®–∞–≥ 3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫ transliterate —Å–æ —Å—Ç—Ä–æ–∫–æ–π —Å–∏–º–≤–æ–ª–æ–≤ "?!:;,. "
        (–≤–æ–ø—Ä–æ—Å, –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏–µ, –¥–≤–æ–µ—Ç–æ—á–∏–µ, —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π, –∑–∞–ø—è—Ç–∞—è,
        —Ç–æ—á–∫–∞ –∏ –ø—Ä–æ–±–µ–ª):
            @clean_text("?!:;,. ")
            def transliterate(text): ...
    –®–∞–≥ 4. –ù–∏—á–µ–≥–æ –Ω–µ –ø–µ—á–∞—Ç–∞—Ç—å –∏ –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å, —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è.
        –í—ã–∑–æ–≤—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å–∫—Ä—ã—Ç–æ–π —á–∞—Å—Ç—å—é.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –†–µ–≥–∏—Å—Ç—Ä: –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–Ω–∏–π.
        - –ó–∞–º–µ–Ω–∞ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –∏ –ø—Ä–æ–±–µ–ª–æ–≤ --> –Ω–∞ '+'.
        - –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è '+' –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã (—Å–≤–µ–¥–µ–Ω—ã –∫ –æ–¥–Ω–æ–º—É).
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å s –¥–ª—è –∑–∞–º–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏—Ö –±—É–∫–≤;
          —Ä–æ—á–∏–µ —Å–∏–º–≤–æ–ª—ã (–∫—Ä–æ–º–µ chars) –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–∞–∫ –µ—Å—Ç—å.
    """

# import re


def clean_text(chars):
    def decorator(func):
        def wrapper(*args):
            translit = func(*args)
            result = "".join("+" if ch in chars else ch for ch in translit)
            result = re.sub(r"\++", "+", result)
            return result

        return wrapper

    return decorator


@clean_text("?!:;,. ")
def transliterate(text):
    # fmt: off
    translit_map = {
        '—ë': 'yo', '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd',
        '–µ': 'e', '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k',
        '–ª': 'l', '–º': 'm', '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r',
        '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'h', '—Ü': 'c',
        '—á': 'ch', '—à': 'sh', '—â': 'shch', '—ä': '', '—ã': 'y', '—å': '',
        '—ç': 'e', '—é': 'yu', '—è': 'ya'
        }
    # fmt: on
    result = "".join(
        translit_map[ch] if ch in translit_map else ch for ch in text.lower()
    )
    return result


m_11_9_2 = transliterate


# === –ó–∞–¥–∞—á–∞ 3. –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º ===
"""
    –®–∞–≥ 1. –û–±—ä—è–≤–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä access_control(level), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
        –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞.
    –®–∞–≥ 2. –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –æ–±–æ—Ä–∞—á–∏–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–∏
        –µ—ë –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ user_level, –ø–æ—Å—Ç—É–ø–∞—Ç—å —Ç–∞–∫:
        ‚Äì –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∏–∂–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ ‚Üí –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É:
            –û—à–∏–±–∫–∞: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω;
        ‚Äì –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π ‚Üí –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏ –≤–µ—Ä–Ω—É—Ç—å –µ—ë —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
        –ò–µ—Ä–∞—Ä—Ö–∏—è —É—Ä–æ–≤–Ω–µ–π: guest < manager < admin.
    –®–∞–≥ 3. –û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é delete_data(user_level), –∫–æ—Ç–æ—Ä–∞—è –∏–º–∏—Ç–∏—Ä—É–µ—Ç
        —É–¥–∞–ª–µ–Ω–∏–µ –∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É:
            ‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <user_level>)
    –®–∞–≥ 4. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä: @access_control('manager').
    –®–∞–≥ 5. –§—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–∏—Ç—å; –≤—ã–∑–æ–≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∫—Ä—ã—Ç–∞—è —á–∞—Å—Ç—å.
        –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ input() –∏ print().
    """


def access_control(level):
    def decorator(func):
        def wrappet(user_level):
            levels = {"guest": 0, "manager": 10, "admin": 100}
            if user_level in levels and levels[user_level] >= levels[level]:
                result = func(user_level)
                return result
            else:
                return "–û—à–∏–±–∫–∞: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"

        return wrappet

    return decorator


@access_control("manager")
def delete_data(user_level):
    result = f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_level})"
    return result


m_11_9_3 = delete_data
